/*! \page install Java Binding

\section bindings_binding_java_install How to install Simgrid-java

To use java with Simgrid you have to install some dependencies:
 \li Simgrid (see <a href="http://simgrid.gforge.inria.fr/simgrid/3.7/doc/install.html">install
     Simgrid</a>). You should set the SIMGRID_ROOT environment
     variable to the path where you installed SimGrid.
 \li Java JDK packages, such as sun-java6-jdk (with libgcj10-dev or
another version of gcj) or openjdk6.
 
Then Download and install package Simgrid-java:
\verbatim
git clone git://scm.gforge.inria.fr/simgrid/simgrid-java.git
cd simgrid-java
cmake -DCMAKE_INSTALL_PREFIX=$HOME/Install/simgrid-java/ .
make install
\endverbatim
 
Cmake output
\verbatim
-- SITE        : Linux_2.6.38-8-generic_x86_64
-- BUILDNAME   : Simgrid-Java
-- Looking for lib SimGrid
-- Looking for lib SimGrid - found
-- Simgrid version : 3.6
-- Looking for gras.h
-- Looking for gras.h - found
-- Found Tesh: /home/user/Bureau/simgrid/git/bin/tesh
-- Found gras_stub_generator: /home/user/Bureau/simgrid/git/bin/gras_stub_generator
-- Java version 1.6.0.22 configured successfully!
-- Looking for jni.h
-- Looking for jni.h - found
-- Add flags -I/usr/lib/jvm/java-6-openjdk/include
-- Looking for jni_md.h
-- Looking for jni_md.h - found
-- Found javac: /usr/bin/javac
-- Found jar: /usr/bin/jar
-- Configuring done
-- Generating done
-- Build files have been written to: /home/user/workspace/simgrid-java/build
\endverbatim

\section bindings_binding_java_use How to use Simgrid-java

To execute the examples you need to add the path where you installed
the generated libSG_java library (<build_dir>/lib) and libsimgrid
($SIMGRID_ROOT/lib) into the LD_LIBRARY_PATH.

Be careful on Mac, this variable is called DYLD_LIBRARY_PATH and not
LD_LIBRARY_PATH.

\verbatim
$ export SIMGRID_ROOT="$HOME/Install/simgrid/"
$ export SIMGRID_JAVA_ROOT="$HOME/Install/simgrid-java"
$ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$SIMGRID_ROOT/lib:$SIMGRID_JAVA_ROOT/java
$ cd examples
$ java -cp .:../simgrid.jar basic/BasicTest platform.xml basic/basicDeployment.xml
\endverbatim

\section bindings_binding_java_coroutines How to use the coroutines context factory

You may want to use the coroutines context factory, if speed maters to you (since it's about 5 times faster than the default thread-based context factory).

First, remember that the coroutines context factory is still experimental work.

To use the coroutines context factory, you need a Java virtual machine which supports it.

Our implementation rely on a JVM patch made by Lukas Stadler, which you can find <a href="http://ssw.jku.at/General/Staff/LS/coro/">here</a>. You can either recompile the JVM yourself or use the pre-built binaries offered.

SimGrid Java will automatically switch to the coroutine context factory if your JVM support it, so you will just need to execute your simulation with the correct JVM:
\verbatim
$ $PATH_TO_COROUTINE_JVM/java -cp .:../simgrid.jar basic/BasicTest platform.xml basic/basicDeployment.xml
\endverbatim

Notice that you may have to adjust the "coro.stacksPerThread" configuration option to run large simulations:
\verbatim
$ $PATH_TO_COROUTINE_JVM/java -Dcoro.stacksPerThread=$STACKS_NUMBER -cp .:../simgrid.jar basic/BasicTest platform.xml basic/basicDeployment.xml
\endverbatim 
 */
